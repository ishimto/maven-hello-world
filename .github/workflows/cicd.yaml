name: Github Actions - Maven CI/CD
on:
  push:
    branches:
      - test*
    paths-ignore:
      - "*.md"

env:
  DOCKER_IMAGE: javahello # must be the same as service name in docker compose
  DOCKER_IMAGE_TAG: ${{ secrets.DOCKER_USERNAME }}/${DOCKER_IMAGE}
  CONTAINER_NAME: javaproject

jobs:
  ci:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository code
      uses: actions/checkout@v4

    - name: Increase patch
      run: |
        mvn -f myapp/pom.xml build-helper:parse-version versions:set -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.nextIncrementalVersion}'
        echo "VERSION=$(mvn -f myapp/pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: Build image
      run: |
        docker compose up -d
        sleep 15
        echo "STATUS=$(docker inspect --format='{{json .State.Health}}' ${CONTAINER_NAME} | jq | grep unhealthy)" >> $GITHUB_ENV

    - name: Test Image && Extract artifact
      run: |
        
        if [[ -z ${STATUS} ]]; then
            echo "success, extract artifact"
            docker cp ${CONTAINER_NAME}:/myapp-${{ env.VERSION }}.jar .
        else
            echo "container isn't healthy"
            exit 1
        fi

    - name: GitHub artifact
      uses: actions/upload-artifact@v4
      with:
        name: myapp-${{ env.VERSION }}
        path: myapp-${{ env.VERSION }}.jar
   
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Publish docker image to Docker Hub
      run: |
        docker tag ${DOCKER_IMAGE} ${DOCKER_IMAGE_TAG}
        docker tag ${DOCKER_IMAGE} ${DOCKER_IMAGE_TAG}:${{ env.VERSION }}
        docker push ${DOCKER_IMAGE_TAG}
        docker push ${DOCKER_IMAGE_TAG}:${{ env.VERSION }}

    - name: Update pom.xml with new version
      uses: EndBug/add-and-commit@v9
      with:
        author_name: ${{ github.actor }}
        author_email: githubactions@ginger.com
        add: 'myapp/pom.xml'
        message: ${{ env.VERSION }}

  cd:
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Pull latest docker image
        run: docker pull ${DOCKER_IMAGE_TAG}
          
      - name: Run & Test
        run: |
          sleep 8
          docker run -dit --name ${CONTAINER_NAME} ${DOCKER_IMAGE_TAG}
          output=$(docker logs ${CONTAINER_NAME})

          if [[ "${output}" != "Shoham wants to say Hello World!!!" ]]; then
            echo "the output isn't as expected"
            echo "the output is: ${output}"
            exit 1
          else
            echo "Deployed Successfully"
          fi
