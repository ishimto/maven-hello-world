apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  namespace: {{ .Values.app.namespace }}
spec:
  replicas: {{ .Values.app.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.app.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.app.rollingUpdate.maxUnavailable }}
  selector:
    matchLabels:
      app: {{ .Values.app.selectorLabel }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.selectorLabel }}
    spec:
      containers:
      - name: {{ .Values.app.name }}
        image: "{{ .Values.app.image.name }}:{{ .Values.app.image.tag }}"
        imagePullPolicy: {{ .Values.app.image.imagePullPolicy }}
        readinessProbe:
          exec:
            command:
            - ls
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
        livenessProbe:
          exec:
            command:
            - ls
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        ports:
        - containerPort: {{ .Values.app.containerPort }}

      imagePullSecrets:
      - name: docker-cred

      nodeSelector:
        environment: {{ .Values.app.nodeSelector.environment }}
      tolerations:
        - key: {{ .Values.app.tolerations.key }}
          value: {{ .Values.app.tolerations.value }}
          effect: {{ .Values.app.tolerations.effect }}
