apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  namespace: {{ .Values.app.namespace }}
spec:
  replicas: {{ .Values.app.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.app.selectorLabel }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.selectorLabel }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: {{ .Values.services.app.targetPort }}
    spec:
      containers:
      - name: {{ .Values.app.name }}
        image: "{{ .Values.app.image.name }}:{{ .Values.app.image.tag }}"
        imagePullPolicy: {{ .Values.app.image.imagePullPolicy }}
        readinessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.services.app.targetPort }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.services.app.targetPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}

      imagePullSecrets:
      - name: docker-cred

      nodeSelector:
        environment: {{ .Values.app.nodeSelector.environment }}
      tolerations:
        - key: {{ .Values.app.tolerations.key }}
          value: {{ .Values.app.tolerations.value }}
          effect: {{ .Values.app.tolerations.effect }}
